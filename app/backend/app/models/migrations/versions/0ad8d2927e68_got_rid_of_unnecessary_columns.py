"""Got rid of unnecessary columns

Revision ID: 0ad8d2927e68
Revises: f48c0c1abd19
Create Date: 2023-11-08 08:03:21.805431

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ad8d2927e68'
down_revision = 'f48c0c1abd19'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('doctor', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['id'], ['id'])
        batch_op.drop_column('date_created')
        batch_op.drop_column('email')
        batch_op.drop_column('password')

    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['id'], ['id'])
        batch_op.drop_column('date_created')
        batch_op.drop_column('email')
        batch_op.drop_column('password')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('patient', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.VARCHAR(length=258), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('doctor', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password', sa.VARCHAR(length=258), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')

    # ### end Alembic commands ###
